post:
  tags:
    - User Management
  summary: Create User
  description: Return a new user with a bearer token.
  operationId: create-user

  security: []

  requestBody:
    required: true
    content:
      application/json:
        schema:
          description: Field requirements to create a New User object.
          allOf:
            - $ref: '../components/schemas/BaseUser.yaml'
            
            - type: object
              required:
              - userName
              - firstName
              - lastName
              - email
              - password

              properties:
                password:
                  $ref: '../components/schemas/Password.yaml'

  responses:
    201:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                $ref: '../components/schemas/user/User.yaml'
              token:
                $ref: '../components/schemas/BearerToken.yaml'
          examples:
            "Example":
              value:
                $ref: '../examples/user/User.yaml'
    400:
      $ref: '../components/schemas/response/400.yaml'
    500:
      $ref: '../components/schemas/response/500.yaml'

get:
  tags:
    - User Management
  summary: Get User
  description: Return a user object.
  operationId: get-user

  security:
    - BearerToken: []

  responses:
    200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                $ref: '../components/schemas/user/User.yaml'
          examples:
            "Example":
              value:
                $ref: '../examples/user/User.yaml'
    400:
      $ref: '../components/schemas/response/400.yaml'
    401:
      $ref: '../components/schemas/response/401.yaml'
    500:
      $ref: '../components/schemas/response/500.yaml'

patch:
  tags:
    - User Management
  summary: Update User
  description: Return an updated user object.
  operationId: update-user

  security:
    - BearerToken: []

  requestBody:
    required: true
    content:
      application/json:
        schema:
          description: Fields that may be updated on the User object by the Client.
          allOf:
            - $ref: '../components/schemas/BaseUser.yaml'
            
            - type: object
              properties:
                password:
                  $ref: '../components/schemas/Password.yaml'

  responses:
    200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                description: An updated user object.
                $ref: '../components/schemas/user/User.yaml'
          examples:
            "Example":
                $ref: '../examples/user/User.yaml'
    400:
      $ref: '../components/schemas/response/400.yaml'
    401:
      $ref: '../components/schemas/response/401.yaml'
    500:
      $ref: '../components/schemas/response/500.yaml'

delete:
  tags:
    - User Management
  summary: Delete User
  description: Return a deleted user object.
  operationId: delete-user

  security:
    - BearerToken: []

  responses:
    200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                description: The deleted user object.
                $ref: '../components/schemas/user/User.yaml'
          examples:
            "Example":
                $ref: '../examples/user/User.yaml'
    401:
      $ref: '../components/schemas/response/401.yaml'
    500:
      $ref: '../components/schemas/response/500.yaml'
